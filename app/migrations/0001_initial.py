# Generated by Django 3.0.5 on 2020-05-01 11:07

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_publisher', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('phone', models.BigIntegerField(default=0, validators=[django.core.validators.RegexValidator(code='invalid_number', message='invalid number', regex='\\d{10}')])),
                ('address', models.CharField(max_length=100, null=True)),
                ('city', models.CharField(choices=[('Surat', 'Surat'), ('Bharuch', 'Bharuch')], max_length=20, null=True)),
                ('logo', models.ImageField(null=True, upload_to='logo/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BookNow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_date', models.DateField(auto_now_add=True, null=True)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(null=True)),
                ('status', models.TextField(default='pending', null=True)),
                ('pay_status', models.TextField(default='pending', null=True)),
                ('ad_type', models.TextField(choices=[('education', 'education'), ('electronics', 'electronics'), ('garments', 'garments'), ('textile', 'textile'), ('bollywood', 'bollywood')], null=True)),
                ('photo', models.ImageField(null=True, upload_to='banner/')),
                ('days', models.IntegerField(null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=100, null=True)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('city', models.CharField(choices=[('Surat', 'Surat'), ('Bharuch', 'Bharuch')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('photo', models.ImageField(null=True, upload_to='banner/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.TextField(choices=[('Available', 'Available'), ('Not Available', 'Not Available')], null=True)),
                ('to_date', models.DateField(default=datetime.date(2020, 5, 1), null=True)),
                ('height', models.IntegerField(null=True)),
                ('width', models.IntegerField(null=True)),
                ('price', models.IntegerField(null=True)),
                ('ad_type', models.TextField(choices=[('education', 'education'), ('electronics', 'electronics'), ('garments', 'garments'), ('textile', 'textile'), ('bollywood', 'bollywood')], null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Save_Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.MapData')),
                ('cus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating_Us',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_rating', models.IntegerField(null=True)),
                ('rate_us', models.IntegerField(null=True)),
                ('cus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cus', to=settings.AUTH_USER_MODEL)),
                ('pub', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pub', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order_Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unid', models.CharField(max_length=20, null=True)),
                ('order_date', models.DateField(auto_now_add=True, null=True)),
                ('status', models.TextField(default='pending', null=True)),
                ('pay', models.IntegerField(null=True)),
                ('txnid', models.CharField(max_length=50, null=True)),
                ('banktxnid', models.IntegerField(null=True)),
                ('txndate', models.CharField(max_length=20, null=True)),
                ('orderid', models.CharField(max_length=20, null=True)),
                ('banner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.BookNow')),
                ('cus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mapdata', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.MapData')),
            ],
        ),
        migrations.CreateModel(
            name='Compare_Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.MapData')),
                ('cus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booknow',
            name='mapdata',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banner', to='app.MapData'),
        ),
        migrations.AddField(
            model_name='booknow',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publisher', to=settings.AUTH_USER_MODEL),
        ),
    ]
